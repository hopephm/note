소수 계산
	[방법]
	특정 수 N에 대해 루트 N까지의 모든 소수로 나누어 보면 소수인지 알 수 있다.

	[원리]
		>> 어떤 수 이던    제곱에 해당하는 값보다 큰 값으로 나눌 수 있다면, 그보다 작은 값도 반드시 존재해야 하므로,     제곱까지만 검사하면 된다. 

		>> 소수가 아닌 값으로 곱할 수 있다면, 그 수 역시 이미 소수로 구할 수 있기 때문에 소수만 검사하면 된다.

	[구현]
	rootN = sqrt(N);

	DP[0] = 2;
	DP[1] = 3;

	int i = 0;
	while(DP[i] <= rootN){
		if(N%DP[i] == 0)
			return isNotPrimeNumber;
		i++;
	}

	return isPrimeNumber;